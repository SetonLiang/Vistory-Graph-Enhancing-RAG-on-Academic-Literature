Year,Sources,Name,Authors,First Author,Chinese/English,Abstract,Venues,doi
2021,Proceedings of the 2021 ACM Symposium on Principles of Distributed Computing …,Hedging against sore loser attacks in cross-chain transactions,"Yingjie Xue, Maurice Herlihy",Yingjie Xue,English,"A sore loser attack in cross-blockchain commerce rises when one party decides to halt participation partway through, leaving other parties' assets locked up for a long duration. Although vulnerability to sore loser attacks cannot be entirely eliminated, it can be reduced to an arbitrarily low level. This paper proposes new distributed protocols for hedging a range of cross-chain transactions in a synchronous communication model, such as two-party swaps, n-party swaps, brokered transactions, and auctions.",Conference paper,https://dl.acm.org/doi/abs/10.1145/3465084.3467904
2022,2022 IEEE 42nd International Conference on Distributed Computing Systems …,Distributed runtime verification of metric temporal properties for cross-chain protocols,"Ritam Ganguly, Yingjie Xue, Aaron Jonckheere, Parker Ljung, Benjamin Schornstein, Borzoo Bonakdarpour, Maurice Herlihy",Ritam Ganguly,English,"Transactions involving multiple blockchains are implemented by cross-chain protocols. These protocols are based on smart contracts, programs that run on blockchains, executed by a network of computers. Verifying the runtime correctness of smart contracts is a problem of compelling practical interest since, smart contracts can automatically transfer ownership of cryptocurrencies, electronic securities, and other valuable assets among untrusting parties. Such verification is challenging since smart contract execution is time sensitive, and the clocks on different blockchains may not be perfectly synchronized. This paper describes a method for runtime monitoring of blockchain executions. First, we propose a generalized runtime verification technique for verifying partially synchronous distributed computations for the metric temporal logic (MTL) by exploiting bounded-skew clock synchronization. Second, we introduce a …",Conference paper,https://ieeexplore.ieee.org/abstract/document/9912283/
2021,Stabilization,Failure is (literally) an option: Atomic commitment vs optionality in decentralized finance,"Daniel Engel, Maurice Herlihy, Yingjie Xue",Daniel Engel,English," Many aspects of blockchain-based decentralized finance can be understood as an extension of classical distributed computing. In this paper, we trace the evolution of two interrelated notions: failure and fault-tolerance. In classical distributed computing, a failure to complete a multi-party protocol is typically attributed to hardware malfunctions. A fault-tolerant protocol is one that responds to such failures by rolling the system back to an earlier consistent state. In the presence of Byzantine failures, a failure may be the result of an attack, and a fault-tolerant protocol is one that ensures that attackers will be punished and victims compensated. In modern decentralized finance however, failure to complete a protocol can be considered a legitimate option, not a transgression. A fault-tolerant protocol is one that ensures that the party offering the option cannot renege, and the party purchasing the option provides fair …",Conference paper,https://link.springer.com/chapter/10.1007/978-3-030-91081-5_5
2022,International Symposium on Stabilizing,Cross-chain state machine replication,"Yingjie Xue, Maurice Herlihy",Yingjie Xue,English,"This paper considers the classical state machine replication (SMR) problem in a distributed system model inspired by cross-chain exchanges. We propose a novel SMR protocol adapted for this model. Each state machine transition takes O(n) message delays, where n is the number of active participants, of which any number may be Byzantine. This protocol makes novel use of path signatures  to keep replicas consistent. This protocol design cleanly separates application logic from fault-tolerance, providing a systematic way to replace complex ad-hoc cross-chain protocols with a more principled approach.",Conference paper,https://link.springer.com/chapter/10.1007/978-3-031-21017-4_4
2023,Proceedings of the 24th International Conference on Distributed Computing …,Fault-tolerant and expressive cross-chain swaps,"Yingjie Xue, Di Jin, Maurice Herlihy",Yingjie Xue,English,"Cross-chain swaps enable exchange of different assets that reside on different blockchains. Several protocols have been proposed for atomic cross-chain swaps. However, those protocols are not fault-tolerant, in the sense that if any party deviates, no asset transfer can happen. In this paper, we propose two alternative protocols for structuring composable and robust cross-chain swaps. Participants can propose multiple swaps simultaneously and then complete a subset of those swaps according to their needs. Their needs are expressed as predicates which capture acceptable payoff of each participant. Our proposed protocols are thus more expressive due to the introduction of predicates. The proposed protocols are fault-tolerant since, even if some participants deviate, those predicates can still be satisfied, and conforming parties can complete an acceptable set of swaps. ",Conference paper,https://dl.acm.org/doi/abs/10.1145/3571306.3571388
2024,IEEE Transactions on Information Forensics and Security,A Secure and Efficient Blockchain Sharding Scheme via Hybrid Consensus and Dynamic Management,"Meiqi Li, Xinyi Luo, Kaiping Xue, Yingjie Xue, Wentuo Sun, Jian Li",Meiqi Li,English,"Sharding significantly enhances blockchain scalability by dividing the entire network into smaller shards that reach consensus and process transactions in parallel. Nevertheless, two new issues emerge with the adoption of sharding. One issue involves the shrinking size of consensus groups, which leads to vulnerability in consensus. Most existing works introduce periodic shuffle mechanisms to mitigate this problem. Nevertheless, these measures necessitate stronger security assumptions and can only offer a probabilistic assurance of consensus security. Another issue is the challenge in processing cross-shard transactions posed by the isolation of shards. Existing approaches utilize two-phase commit (2PC) or relay transaction mechanisms to handle cross-shard transactions. However, these approaches are vulnerable to double cross-shard attacks from malicious shards and are unable to achieve immediate …",Article,https://ieeexplore.ieee.org/abstract/document/10539974/
2024,arXiv preprint arXiv:2405.02973,FairRelay: Fair and Cost-Efficient Peer-to-Peer Content Delivery through Payment Channel Networks,"Jingyu Liu, Yingjie Xue, Zifan Peng, Chao Lin, Xinyi Huang",Jingyu Liu,English,"Peer-to-Peer (P2P) content delivery, known for scalability and resilience, offers a decentralized alternative to traditional centralized Content Delivery Networks (CDNs). A significant challenge in P2P content delivery remains: the fair compensation of relayers for their bandwidth contributions. Existing solutions employ blockchains for payment settlements, however, they are not practical due to high on-chain costs and over-simplified network assumptions. In this paper, we introduce FairRelay, a fair and cost-efficient protocol that ensures all participants get fair payoff in complex content delivery network settings. We introduce a novel primitive, Enforceable Accumulative Hashed TimeLock Contract (Enforceable A-HTLC), designed to guarantee payment atomicity - ensuring all participants receive their payments upon successful content delivery. The fairness of FairRelay is proved using the Universal Composability (UC) framework. Our evaluation demonstrates that, in optimistic scenarios, FairRelay employs zero on-chain costs. In pessimistic scenarios, the on-chain dispute costs for relayers and customers are constant, irrespective of the network complexity. Specifically, empirical results indicate that the on-chain dispute costs for relayers and customers are 24,902 gas (equivalent to 0.01 USD on Optimism L2) and 290,797 gas (0.07 USD), respectively. In a 10-hop relay path, FairRelay introduces less than 1.5% additional overhead compared to pure data transmission, showcasing the efficiency of FairRelay.",Article,https://arxiv.org/abs/2405.02973
2024,Blockchain Journal,"Blockchain-enabled cross-border insurance: from legal issues, solution design, to implementation","Jiaxin Ran, Dechuan Li, Qixin Zheng, Jerome Yen, Yingjie Xue",Jiaxin Ran,English,"Traditional insurance contracts are beset with challenges such as cumbersome notification, complex underwriting and inefficient claims settlement, all of which impede the industry’s growth. In respons...",Article,https://www.elspub.com/papers/j/1762475646867136512
2024,Journal of Parallel and Distributed Computing 185,Distributed runtime verification of metric temporal properties,"Ritam Ganguly, Yingjie Xue, Aaron Jonckheere, Parker Ljung, Benjamin Schornstein, Borzoo Bonakdarpour, Maurice Herlihy",Ritam Ganguly,English,"Distributed Systems are often composed of geographically separated components, where the clocks may not be perfectly synchronized. As such verifying the correctness of such system properties are a major challenge and are of utmost importance. In this paper, we describe a centralized runtime monitoring technique for distributed system. First, we propose a generalized runtime verification technique for verifying partially synchronous distributed computations for the metric temporal logic (MTL) by exploiting bounded-skew clock synchronization. Second, we introduce a progression-based formula rewriting scheme for monitoring MTL specifications which employs SMT solving techniques and report experimental results. Third, we also quantify each event according to the possible time of occurrence and calculate the probabilistic guarantee for generating the verification verdict. Lastly, we have implemented the …",Article,https://www.sciencedirect.com/science/article/pii/S0743731523001715
2024,,Blockchain-enabled cross-border insurance: from legal,"Jiaxin Ran, Dechuan Li, Qixin Zheng, Jerome Yen, Yingjie Xue",Jiaxin Ran,English,"Traditional insurance contracts are beset with challenges such as cumbersome notification, complex underwriting and inefficient claims settlement, all of which impede the industry’s growth. In response, the digital transformation of insurance companies has become essential. Blockchain technology, with its inherent features of transparency and immutability, offers significant potential for transforming the insurance industry and there has been considerable research on using blockchain technology in the insurance sector. However, when it comes to cross-border insurance service, current solutions fall short in effectively navigating the legal and compliance complexities inherent in cross-border insurance service delivery. When transmitting data across borders, it is essential to adhere to the legal requirements of cross-border laws and regulations, especially considering the variations in regional data protection and privacy legislation. A general solution for managing cross-border data transfer that both supports service delivery and adheres to compliance standards, has yet to be developed. In this paper, we propose solutions to secure data transfer in cross-border insurance service provision. First, we examine the legal and compliance challenges associated with cross-border data transfer. Following this, we introduce a system that integrates blockchain, smart contracts, and Trusted Execution Environment (TEE) to enhance cross-border insurance services. We propose a cross-chain protocol, which incorporates hash-locking and the notary mechanism for efficiency and security. We develop a prototype for implementing our proposed protocol and …",Conference paper,https://elsp-homepage.oss-cn-hongkong.aliyuncs.com/paper/journal/open/BC/2024/blockchain20240003.pdf
2023,Proceedings of the 4th ACM Conference on Advances in Financial Technologies,Transferable Cross-Chain Options,"Daniel Engel, Yingjie Xue",Daniel Engel,English,"An option is a financial agreement between two parties to trade two assets. One party is given the right, but not the obligation, to complete the swap before a specified termination time. In today's financial markets, an option is considered an asset which can itself be transferred: while an option is active, one party can sell its rights (or obligations) to another. Today's blockchains support simple options in the form of cross-chain atomic swap protocols where one party has the choice whether to complete the swap. The options implemented by these cross-chain protocols, are not, however, transferable. This paper proposes novel distributed protocols for transferable cross-chain options, where both option owners and providers can sell their positions to third parties. The protocol ensures that none of the parties can be cheated, that no unauthorized party can interfere, and that the transfer succeeds if the buyer and …",Article,https://dl.acm.org/doi/abs/10.1145/3558535.3559774
2021,Stabilization,Check for updates Failure is (literally) an Option: Atomic Commitment vs Optionality in Decentralized Finance,"Daniel Engel, Yingjie Xue",Daniel Engel,English,"Many aspects of blockchain-based decentralized finance can be understood as an extension of classical distributed computing. In this paper, we trace the evolution of two interrelated notions: failure and fault-tolerance. In classical distributed computing, a failure to complete a multi-party protocol is typically attributed to hardware malfunctions. A fault-tolerant protocol is one that responds to such failures by rolling the system back to an earlier consistent state. In the presence of Byzantine failures, a failure may be the result of an attack, and a fault-tolerant protocol is one that ensures that attackers will be punished and victims compensated. In modern decentralized finance however, failure to complete a protocol can be considered a legitimate option, not a transgression. A fault-tolerant protocol is one that ensures that the party offering the option cannot renege, and the party purchasing the option provides fair compensation (in the form of a fee) to the offering party. We sketch the evolution of such protocols, starting with two-phase commit, and finishing with timed hashlocked smart contracts.",Article,https://books.google.com/books?hl=en&lr=&id=JRpNEAAAQBAJ&oi=fnd&pg=PA66&dq=info:djlYhfbDtJkJ:scholar.google.com&ots=nEPhIeMIuB&sig=dkRJRCRBKYjaEKchXPq_E5eWTmA
